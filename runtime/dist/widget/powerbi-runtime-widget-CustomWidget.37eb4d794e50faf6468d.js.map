{"version":3,"sources":["webpack:///C:/widgets/projects/gp-powerbi-widget/src/lib/http.service.ts","webpack:///C:/widgets/projects/gp-powerbi-widget/src/lib/powerbi.service.ts","webpack:///C:/widgets/projects/gp-powerbi-widget/src/lib/gp-powerbi-widget.component.ts","webpack:///C:/widgets/projects/gp-powerbi-widget/src/lib/gp-powerbi-config/gp-powerbi-config.component.ts","webpack:///C:/widgets/projects/gp-powerbi-widget/src/lib/gp-powerbi-widget.module.ts","webpack:///C:/widgets/projects/gp-powerbi-widget/src/public-api.ts","webpack:///C:/widgets/projects/gp-powerbi-widget/src/custom-widget.ts"],"names":[],"mappings":"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","file":"powerbi-runtime-widget-CustomWidget.37eb4d794e50faf6468d.js","sourcesContent":["/**\r\n * Copyright (c) 2021 Software AG, Darmstadt, Germany and/or its licensors\r\n *\r\n * SPDX-License-Identifier: Apache-2.0\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { FetchClient, IFetchResponse } from '@c8y/client';\r\n@Injectable()\r\nexport class HttpService {\r\n    public path: string = null;\r\n    constructor(private fetchClient: FetchClient) {\r\n        this.path = '';\r\n    }\r\n    async Get<T>(endPoint: string, params?: object, headers = { accept: 'application/json' }): Promise<IFetchResponse> {\r\n        const method = 'GET';\r\n        const options = {method, headers, params};\r\n        return this.fetchClient.fetch(this.getEndPoint(endPoint), options);\r\n    }\r\n    async Head<T>(endPoint: string, params?: object, headers = { accept: 'application/json' }): Promise<IFetchResponse> {\r\n        const method = 'HEAD';\r\n        const options = {method, headers, params};\r\n        return this.fetchClient.fetch(this.getEndPoint(endPoint), options);\r\n    }\r\n    async Post<T>(endPoint: string,\r\n                  body: object, params?: object,\r\n                  headers = { accept: 'application/json' }): Promise<IFetchResponse> {\r\n        return this.fetchClient.fetch(this.getEndPoint(endPoint), {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n            headers,\r\n            params\r\n        });\r\n    }\r\n    async Delete<T>(endPoint: string,\r\n                    params?: object,\r\n                    headers = { accept: 'application/json' }): Promise<IFetchResponse> {\r\n        const method = 'DELETE';\r\n        const options = {method, headers, params};\r\n        return this.fetchClient.fetch(this.getEndPoint(endPoint), options);\r\n    }\r\n    private getEndPoint(endPoint: string): string {\r\n        return this.path + endPoint;\r\n    }\r\n}\r\n","/**\r\n * Copyright (c) 2021 Software AG, Darmstadt, Germany and/or its licensors\r\n *\r\n * SPDX-License-Identifier: Apache-2.0\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { IFetchResponse } from '@c8y/client';\r\nimport { HttpService } from './http.service';\r\n// import { PowerBIReports, PowerBISettings } from '@model/interfaces/powerbi.interface';\r\nimport { PowerBIReports, PowerBISettings } from './powerbi.interface';\r\nexport type CachedPowerBIInfo = {\r\n  reports: PowerBIReports;\r\n  activeToken: string;\r\n  settings: PowerBISettings;\r\n};\r\n@Injectable()\r\nexport class PowerBIService {\r\n  private static readonly cachedInfoDefault: CachedPowerBIInfo = {\r\n    reports: [],\r\n    activeToken: '',\r\n    settings: null\r\n  };\r\n  public path = '';\r\n  private configRequested = false;\r\n  public cachedInfo: CachedPowerBIInfo = JSON.parse(JSON.stringify(PowerBIService.cachedInfoDefault));\r\n  constructor(private http: HttpService) {}\r\n  // Irrelevant for customer scenario, only used to load the navigator node once, if settings are defined\r\n  public setConfigRequestState(): void {\r\n    this.configRequested = true;\r\n  }\r\n  // Irrelevant for customer scenario, only used to load the navigator node once, if settings are defined\r\n  public getConfigRequestState(): boolean {\r\n    return this.configRequested;\r\n  }\r\n  // For checking, if config is defined in microservice\r\n  async getConfig(): Promise<IFetchResponse> {\r\n    const url = `${this.path}/config`;\r\n    return await this.http.Get(url);\r\n  }\r\n  // For saving the configuration, may not be needed if hard coded\r\n  async save(connection: any): Promise<IFetchResponse> {\r\n    const url = `${this.path}/config`;\r\n    return await this.http.Post(url, connection);\r\n  }\r\n  // For deleting the configuration, may not be needed if hard coded\r\n  async delete(): Promise<IFetchResponse> {\r\n    const url = `${this.path}/config`;\r\n    const params = { timeout: 5000 };\r\n    return await this.http.Delete(url, params);\r\n  }\r\n  // May not be needed in customer scenario\r\n  async listWorkspaces(): Promise<IFetchResponse> {\r\n    const url = `${this.path}/groups`;\r\n    return await this.http.Get(url);\r\n  }\r\n  // May not be needed in customer scenario\r\n  async listReports(workspaceId: string): Promise<IFetchResponse> {\r\n    const url = `${this.path}/reports`;\r\n    const params = {\r\n      groupId: workspaceId\r\n    };\r\n    return await this.http.Get(url, params);\r\n  }\r\n  // This is where the embeddingToken is requested\r\n  async embedReport(workspaceId: string, reportId: string): Promise<IFetchResponse> {\r\n    const url = `${this.path}/embedReport`;\r\n    const params = {\r\n      groupId: workspaceId,\r\n      reportId\r\n    };\r\n    return await this.http.Get(url, params);\r\n  }\r\n  flushCache(): any{\r\n    this.cachedInfo = JSON.parse(JSON.stringify(PowerBIService.cachedInfoDefault));\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) 2021 Software AG, Darmstadt, Germany and/or its licensors\r\n *\r\n * SPDX-License-Identifier: Apache-2.0\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { AlertService, gettext } from '@c8y/ngx-components';\r\nimport * as pbiClient from 'powerbi-client';\r\nimport { HttpService } from './http.service';\r\nimport { EmbeddingInfo, PowerBIWorkspace } from './powerbi.interface';\r\nimport { PowerBIService } from './powerbi.service';\r\n@Component({\r\n  selector: 'gp-powerbi-widget',\r\n  templateUrl: './gp-powerbi-widget.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class GpPowerbiWidgetComponent implements OnInit, OnChanges {\r\n  private powerbi = new pbiClient.service.Service(\r\n    pbiClient.factories.hpmFactory,\r\n    pbiClient.factories.wpmpFactory,\r\n    pbiClient.factories.routerFactory\r\n  );\r\n  @ViewChild('reportContainer', { static: true }) reportContainer: ElementRef;\r\n  embeddingInfo: EmbeddingInfo;\r\n  reportName: string;\r\n  workspaceID ;\r\n  reportID ;\r\n  @Input() config;\r\n  public workspaces: PowerBIWorkspace[] = [];\r\n  public settingsNotDefined = false;\r\n  public isLoading = false;\r\n  private readonly embedUrl = 'https://app.powerbi.com/reportEmbed';\r\n  embeddedReport: any;\r\n  reportToDisplay: { id: string; workspaceId: string; token: any; name: any; };\r\n  constructor(\r\n    private powerbiService: PowerBIService,\r\n    private alertService: AlertService,\r\n    private http: HttpService,\r\n  ) {}\r\n  // When changes are pushed from host component to report component, component is reinitialized to show a different report.\r\n  // This may not be needed in customer scenario\r\n  async ngOnChanges(changes: SimpleChanges): Promise<void> {\r\n    if (changes.embeddingInfo && changes.embeddingInfo.currentValue) {\r\n      await this.ngOnInit();\r\n    }\r\n  }\r\n  async ngOnInit(): Promise<void> {\r\n    try{\r\n      this.http.path = this.config.datahubEndPoint;\r\n      this.powerbiService.path = this.config.powerBIEndPoint;\r\n      await this.loadReport(this.config);\r\n    } catch (e){\r\n      this.alertService.danger('Failed to load report.');\r\n    }\r\n    try {\r\n      // tslint:disable-next-line:max-line-length\r\n      this.embedReport(this.embeddingInfo.reportId, this.embeddingInfo.embeddingToken, this.config.isFilterPaneEnabled, this.config.isNavPaneEnabled);\r\n    } catch (e) {\r\n      // this.alertService.danger('Failed to fetch embedding token.');\r\n      this.alertService.danger('Failed to fetch embedding token.');\r\n    }\r\n  }\r\n  // This is where the Power BI client is actually used - parametrize the config however you like\r\n  private embedReport(reportId: any, token: string, filterPanelEnabled: boolean, navPanelEnabled?: boolean): any {\r\n    const embedConfig = {\r\n      type: 'report',\r\n      id: reportId,\r\n      embedUrl: this.embedUrl,\r\n      tokenType: pbiClient.models.TokenType.Embed,\r\n      accessToken: token,\r\n      // permissions: pbi.models.Permissions.Read,\r\n      settings: {\r\n      // The option is called filterPaneEnabled, there is a typo in the method parameter name\r\n        filterPaneEnabled: filterPanelEnabled,\r\n        // Same as filterPaneEnabled\r\n        navContentPaneEnabled: navPanelEnabled,\r\n        background: pbiClient.models.BackgroundType.Transparent\r\n      }\r\n    };\r\n    const reportContainer = this.reportContainer.nativeElement;\r\n    this.powerbi.reset(reportContainer);\r\n    const report = this.powerbi.embed(reportContainer, embedConfig);\r\n    report.off('error');\r\n    report.on('error', (error) => {\r\n      this.alertService.danger('Failed to embed report.');\r\n    });\r\n  }\r\n  // Load the report based on worspace selected\r\n  // sets the report ID and token\r\n  private async loadReport(config): Promise<any>{\r\n    this.workspaceID = this.config.workspaceSelected.id;\r\n    this.reportID = this.config.reportSelected.id;\r\n    this.reportName = this.config.reportSelected.name;\r\n    const token = await this.getToken(this.reportID, this.workspaceID, this.reportName);\r\n    if (token) {\r\n      this.embeddingInfo = {\r\n        reportId: this.reportID,\r\n        embeddingToken: token\r\n      };\r\n    }\r\n    // cache set the token\r\n  }\r\n  // Fetch the token for selected report and workspace\r\n  private async getToken(reportId: string, workspaceId: string, reportName): Promise<string> {\r\n    try {\r\n      const tokenRequest = await this.powerbiService.embedReport(this.workspaceID, this.reportID);\r\n      if (tokenRequest.status === 200) {\r\n        const payload = await tokenRequest.json();\r\n        if (payload.status === 'SUCCEEDED') {\r\n          this.embeddedReport = payload.data;\r\n          this.reportToDisplay = {\r\n            id: reportId,\r\n            workspaceId,\r\n            token: this.embeddedReport.token,\r\n            name: reportName\r\n          };\r\n          return this.embeddedReport.token;\r\n        } else {\r\n          this.alertService.danger('Error in payload');\r\n          throw Error();\r\n        }\r\n      } else {\r\n        this.alertService.danger('Error in tokenRequest');\r\n        throw Error();\r\n      }\r\n    } catch (e) {\r\n      this.alertService.danger('An error occurred while fetching the embedding token for the report.');\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) 2021 Software AG, Darmstadt, Germany and/or its licensors\r\n *\r\n * SPDX-License-Identifier: Apache-2.0\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { Component, Input, isDevMode, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AlertService, gettext } from '@c8y/ngx-components';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpService } from '../http.service';\r\nimport { EmbeddingInfo, PowerBIReportModalResult, PowerBIReports, PowerBIWorkspace } from '../powerbi.interface';\r\nimport { PowerBIService } from '../powerbi.service';\r\n@Component({\r\n  selector: 'gp-powerbi-config',\r\n  templateUrl: './gp-powerbi-config.component.html',\r\n  styleUrls: ['./gp-powerbi-config.component.css']\r\n})\r\nexport class GpPowerbiConfigComponent implements OnInit {\r\n  @Input() config: any = {\r\n    powerBIEndPoint: '',\r\n    datahubEndPoint: ''\r\n  };\r\n  public isFilterPaneEnabled = false;\r\n  public isNavPaneEnabled = false;\r\n  public workspaceIndex = 0;\r\n  public workspaces: PowerBIWorkspace[];\r\n  public reports: PowerBIReports[];\r\n  public visibleReports: PowerBIReports;\r\n  public form: FormGroup;\r\n  public isLoading = false;\r\n  testUrl = 'hello';\r\n  public onClose: Subject<PowerBIReportModalResult> = new Subject<PowerBIReportModalResult>();\r\n  public modalResult: PowerBIReportModalResult = {\r\n    workspaceId: null,\r\n    report: null\r\n  };\r\n  public error = '';\r\n  constructor(\r\n    private powerbiService: PowerBIService,\r\n    private fb: FormBuilder,\r\n    private alertService: AlertService,\r\n    private http: HttpService\r\n  ) {\r\n    this.form = this.fb.group({\r\n      workspace: this.fb.control(null, Validators.required),\r\n      report: this.fb.control(null, Validators.required)\r\n    });\r\n  }\r\n  async ngOnInit(): Promise<void> {\r\n    if (!this.config.isNavPaneEnabled){\r\n      this.config.isNavPaneEnabled = false;\r\n    }\r\n    if (this.config.powerBIEndPoint === '') {\r\n      this.config.powerBIEndPoint = '/powerbi';\r\n    } else {\r\n      if (isDevMode()) { console.log(this.config.powerBIEndPoint); }\r\n    }\r\n    if (this.config.datahubEndPoint === '') {\r\n      this.config.datahubEndPoint = '/service/datahub';\r\n    } else {\r\n      if (isDevMode()) { console.log(this.config.datahubEndPoint); }\r\n    }\r\n    if (this.config.datahubEndPoint !== '/service/datahub' || this.config.powerBIEndPoint !== '/powerbi') {\r\n      this.setUrlAndGetWorkspace();\r\n    } else {\r\n      this.http.path = this.config.datahubEndPoint;\r\n      this.powerbiService.path = this.config.powerBIEndPoint;\r\n      this.getReport();\r\n    }\r\n  }\r\n  // If user updates datahub or PowerBI url\r\n  // then use that and update the path in http service and powerbi service\r\n  // and fetch list of workspaces and reports available if any\r\n  setUrlAndGetWorkspace(): any {\r\n    if (isDevMode()) {\r\n      console.log('setUrlAndGetWorkspace Config URL', this.config.powerBIEndPoint, this.config, this.config.datahubEndPoint);\r\n    }\r\n    this.http.path = this.config.datahubEndPoint;\r\n    this.powerbiService.path = this.config.powerBIEndPoint;\r\n    this.getReport();\r\n  }\r\n  // fetch the exisiting selected value of workspace and report if available\r\n  // and list of workspaces and reports available if any\r\n  async getReport(): Promise<any> {\r\n    const configFetchResponse = await this.powerbiService.getConfig();\r\n    if (configFetchResponse.status === 200) {\r\n      const config = await configFetchResponse.json();\r\n    } else {\r\n      this.alertService.danger('Cannot find the Path');\r\n    }\r\n    const workspacesFetchResult = await this.powerbiService.listWorkspaces();\r\n    if (workspacesFetchResult.status === 200) {\r\n      const reports = await workspacesFetchResult.json();\r\n      // If reports are found\r\n      if (reports.status === 'SUCCEEDED') {\r\n        this.workspaces = reports.data;\r\n        // If workspace length is zero then show error message\r\n        if (this.workspaces.length === 0) {\r\n          this.alertService.danger('Cannot select report because no workspaces are available.');\r\n        } else {\r\n          const selectedWorkspaceIndex = this.extractWorkspaceIndex();\r\n          await this.fetchReportsForFirstWorkspaceAndShow(selectedWorkspaceIndex);\r\n          this.initForm();\r\n        }\r\n      } // If reports are not found reports.status != 'SUCCEEDED'\r\n      else {\r\n      } // End of reports.staus check\r\n    }\r\n  }\r\n  extractWorkspaceIndex(): number {\r\n    const workspaceIndex = this.workspaces.findIndex((workspace) =>\r\n      workspace.id === this.config.workspaceSelected.id\r\n    );\r\n    return workspaceIndex;\r\n  }\r\n  extractReportIndex(): number {\r\n    const reportIndex = this.reports[0].findIndex((report, index) => {\r\n      if (report.id === this.config.reportSelected.id) {\r\n        return 1;\r\n      } else {\r\n        if (isDevMode()) {console.log('no matching in reports'); }\r\n      }\r\n    });\r\n    return reportIndex;\r\n  }\r\n  // Show the selected value in form and update the values selected in config\r\n  // workspace and report\r\n  initForm(): any {\r\n    const selectedWorkspaceIndex = this.extractWorkspaceIndex();\r\n    const selectedReportIndex = this.extractReportIndex();\r\n    if (selectedWorkspaceIndex) {\r\n      this.form = this.fb.group({\r\n        workspace: this.fb.control(this.workspaces[selectedWorkspaceIndex], Validators.required),\r\n        report: this.fb.control(this.reports[0].length > 0 ? this.reports[0][selectedReportIndex] : null, Validators.required)\r\n      });\r\n    } else {\r\n      this.form = this.fb.group({\r\n        workspace: this.fb.control(this.workspaces[0], Validators.required),\r\n        report: this.fb.control(this.reports[0].length > 0 ? this.reports[0][0] : null, Validators.required)\r\n      });\r\n    }\r\n    this.visibleReports = this.reports[0];\r\n    const workspaces = this.workspaces.slice(1, this.workspaces.length);\r\n    workspaces.forEach(() => {\r\n      this.reports.push(null);\r\n    });\r\n    this.config.reportSelected = this.form.controls.report.value;\r\n    this.config.workspaceSelected = this.form.controls.workspace.value;\r\n    this.form.controls.workspace.valueChanges.subscribe(async (workspaceValue: PowerBIWorkspace) => {\r\n      const workspaceIndex = this.workspaces.findIndex((workspace) => workspace === workspaceValue);\r\n      if (workspaceIndex >= 0) {\r\n        if (this.reports[workspaceIndex] === null) {\r\n          try {\r\n            this.error = '';\r\n            this.isLoading = true;\r\n            const reportsFetchResult = await this.powerbiService.listReports(this.workspaces[workspaceIndex].id);\r\n            if (reportsFetchResult.status === 200) {\r\n              const payload = await reportsFetchResult.json();\r\n              if (payload.status === 'SUCCEEDED') {\r\n                this.reports[workspaceIndex] = payload.data;\r\n                if (this.reports[workspaceIndex].length > 0) {\r\n                  this.form.controls.workspace.setValue(this.workspaces[workspaceIndex]);\r\n                  this.form.controls.report.setValue(this.reports[workspaceIndex][0]);\r\n                } else {\r\n                  this.form.controls.report.setValue(null);\r\n                }\r\n                this.form.updateValueAndValidity();\r\n              } else {\r\n                throw Error();\r\n              }\r\n            } else {\r\n              this.form.controls.report.setValue(null);\r\n              throw Error();\r\n            }\r\n          } catch (e) {\r\n            this.error = 'Fetching reports for workspace failed.';\r\n          } finally {\r\n            this.isLoading = false;\r\n          }\r\n        } else {\r\n          try {\r\n            this.error = '';\r\n            this.isLoading = true;\r\n            const reportsFetchResult = await this.powerbiService.listReports(this.workspaces[workspaceIndex].id);\r\n            if (reportsFetchResult.status === 200) {\r\n              const payload = await reportsFetchResult.json();\r\n              if (payload.status === 'SUCCEEDED') {\r\n                this.reports[workspaceIndex] = payload.data;\r\n                if (this.reports[workspaceIndex].length > 0) {\r\n                  this.form.controls.report.setValue(this.reports[workspaceIndex][0]);\r\n                } else {\r\n                  this.form.controls.report.setValue(null);\r\n                }\r\n                this.form.updateValueAndValidity();\r\n              } else {\r\n                throw Error();\r\n              }\r\n            } else {\r\n              this.form.controls.report.setValue(null);\r\n              throw Error();\r\n            }\r\n          } catch (e) {\r\n            this.error = 'Fetching reports for workspace failed.';\r\n          } finally {\r\n            this.isLoading = false;\r\n          }\r\n          this.error = '';\r\n        }\r\n        this.visibleReports = this.reports[workspaceIndex];\r\n        this.workspaceIndex = workspaceIndex;\r\n        this.config.workspaceSelected = this.form.controls.workspace.value;\r\n      }\r\n    });\r\n    // Form change on report selection\r\n    this.form.controls.report.valueChanges.subscribe(async (reportValue: PowerBIReports) => {\r\n      const reportIndex = this.reports.findIndex((report) => report === reportValue);\r\n      this.config.reportSelected = reportValue;\r\n    });\r\n  }\r\n  // Fetch the Reports for Workspace and show those\r\n  private async fetchReportsForFirstWorkspaceAndShow(configWorkspaceIndex): Promise<any> {\r\n    try {\r\n      // If workspace are available, then fetch reports and populate dropdown\r\n      let reportsFetchResult;\r\n      if (configWorkspaceIndex) {\r\n        reportsFetchResult = await this.powerbiService.listReports(this.workspaces[configWorkspaceIndex].id);\r\n      } else {\r\n        reportsFetchResult = await this.powerbiService.listReports(this.workspaces[0].id);\r\n      }\r\n      if (reportsFetchResult.status === 200) {\r\n        const payload = await reportsFetchResult.json();\r\n        // If there is data in response\r\n        if (payload.status === 'SUCCEEDED') {\r\n          // Add data to reports array\r\n          this.reports = [];\r\n          this.reports.push(payload.data);\r\n          // Cretae initial state of workspace and report\r\n          const initialState = {\r\n            workspaces: this.workspaces,\r\n            reports: this.reports\r\n          };\r\n        } else {\r\n          throw Error();\r\n        }\r\n      } else {\r\n        throw Error();\r\n      }\r\n    }\r\n    catch {\r\n      const msg = gettext('An error occurred while fetching reports of workspace {{workspaceName}}. Try again.');\r\n      this.alertService.danger('workspaceName: ', this.workspaces[0].name);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) 2021 Software AG, Darmstadt, Germany and/or its licensors\r\n *\r\n * SPDX-License-Identifier: Apache-2.0\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { HOOK_COMPONENTS, CoreModule, FormsModule as c8yFormsModule } from '@c8y/ngx-components';\r\nimport { GpPowerbiWidgetComponent } from './gp-powerbi-widget.component';\r\nimport { HttpService } from './http.service';\r\nimport { PowerBIService } from './powerbi.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\r\nimport { GpPowerbiConfigComponent } from './gp-powerbi-config/gp-powerbi-config.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [GpPowerbiWidgetComponent, GpPowerbiConfigComponent],\r\n  imports: [\r\n    CoreModule, CollapseModule, RouterModule, c8yFormsModule, ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n    HttpService,\r\n    PowerBIService,\r\n    {\r\n      provide: HOOK_COMPONENTS,\r\n      multi: true,\r\n      useValue: {\r\n        id: 'powerbi.widget',\r\n        label: 'Power BI Widget',\r\n        description: 'Power BI Widget',\r\n        component: GpPowerbiWidgetComponent,\r\n        configComponent: GpPowerbiConfigComponent,\r\n        data: {\r\n          ng1: {\r\n            options: {\r\n              noDeviceTarget: true,\r\n              noNewWidgets: false,\r\n              deviceTargetNotRequired: true,\r\n              groupsSelectable: true\r\n            },\r\n          }\r\n        }\r\n      }\r\n    }],\r\n  exports: [GpPowerbiWidgetComponent, GpPowerbiConfigComponent],\r\n  entryComponents: [GpPowerbiWidgetComponent, GpPowerbiConfigComponent]\r\n})\r\nexport class GpPowerbiWidgetModule { }\r\n","/**\r\n * Copyright (c) 2021 Software AG, Darmstadt, Germany and/or its licensors\r\n *\r\n * SPDX-License-Identifier: Apache-2.0\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/*\r\n * Public API Surface of gp-powerbi-widget\r\n */\r\nexport * from './lib/gp-powerbi-widget.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {GpPowerbiConfigComponent as ɵd} from './lib/gp-powerbi-config/gp-powerbi-config.component';\nexport {GpPowerbiWidgetComponent as ɵa} from './lib/gp-powerbi-widget.component';\nexport {HttpService as ɵc} from './lib/http.service';\nexport {PowerBIService as ɵb} from './lib/powerbi.service';"],"sourceRoot":""}