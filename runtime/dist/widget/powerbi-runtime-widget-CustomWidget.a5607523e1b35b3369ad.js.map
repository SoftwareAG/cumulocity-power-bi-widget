{"version":3,"sources":["webpack:///C:/widgets/projects/gp-powerbi-widget/src/lib/http.service.ts","webpack:///C:/widgets/projects/gp-powerbi-widget/src/lib/powerbi.service.ts","webpack:///C:/widgets/projects/gp-powerbi-widget/src/lib/gp-powerbi-widget.component.ts","webpack:///C:/widgets/projects/gp-powerbi-widget/src/lib/gp-powerbi-config/gp-powerbi-config.component.ts","webpack:///C:/widgets/projects/gp-powerbi-widget/src/lib/gp-powerbi-widget.module.ts","webpack:///C:/widgets/projects/gp-powerbi-widget/src/public-api.ts","webpack:///C:/widgets/projects/gp-powerbi-widget/src/custom-widget.ts"],"names":[],"mappings":"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","file":"powerbi-runtime-widget-CustomWidget.a5607523e1b35b3369ad.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { FetchClient, IFetchResponse } from '@c8y/client';\r\nimport { OptionsService } from '@c8y/ngx-components';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n    private path: string = null;\r\n\r\n    constructor(private fetchClient: FetchClient,\r\n                private optionsService: OptionsService\r\n                ) {\r\n        this.path = this.optionsService.get('cdhContextPath');\r\n    }\r\n\r\n    async Get<T>(endPoint: string,\r\n                params?: object,\r\n                headers = { accept: 'application/json' }): Promise<IFetchResponse> {\r\n        const method = 'GET';\r\n        const options = {method, headers, params};\r\n        return this.fetchClient.fetch(this.getEndPoint(endPoint), options);\r\n    }\r\n\r\n    async Head<T>(endPoint: string,\r\n                  params?: object,\r\n                  headers = { accept: 'application/json' }): Promise<IFetchResponse> {\r\n        const method = 'HEAD';\r\n        const options = {method, headers, params};\r\n        return this.fetchClient.fetch(this.getEndPoint(endPoint), options);\r\n    }\r\n\r\n    async Post<T>(endPoint: string,\r\n                  body: object, params?: object,\r\n                  headers = { accept: 'application/json' }): Promise<IFetchResponse> {\r\n        return this.fetchClient.fetch(this.getEndPoint(endPoint), {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n            headers,\r\n            params\r\n        });\r\n    }\r\n\r\n    async Delete<T>(endPoint: string,\r\n                    params?: object,\r\n                    headers = { accept: 'application/json' }): Promise<IFetchResponse> {\r\n        const method = 'DELETE';\r\n        const options = {method, headers, params};\r\n        return this.fetchClient.fetch(this.getEndPoint(endPoint), options);\r\n    }\r\n\r\n    private getEndPoint(endPoint: string): string {\r\n        return this.path + endPoint;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IFetchResponse } from '@c8y/client';\r\nimport { HttpService } from './http.service';\r\n// import { PowerBIReports, PowerBISettings } from '@model/interfaces/powerbi.interface';\r\n\r\nimport { PowerBIReports, PowerBISettings } from './powerbi.interface';\r\n\r\nexport type CachedPowerBIInfo = {\r\n  reports: PowerBIReports;\r\n  activeToken: string;\r\n  settings: PowerBISettings;\r\n};\r\n\r\n@Injectable()\r\nexport class PowerBIService {\r\n  private path = '/service/datahub/powerbi';\r\n  private static readonly cachedInfoDefault: CachedPowerBIInfo = {\r\n    reports: [],\r\n    activeToken: '',\r\n    settings: null\r\n  };\r\n  private configRequested = false;\r\n  public cachedInfo: CachedPowerBIInfo = JSON.parse(JSON.stringify(PowerBIService.cachedInfoDefault));\r\n\r\n  constructor(private http: HttpService) {}\r\n\t\r\n\t// Irrelevant for customer scenario, only used to load the navigator node once, if settings are defined\r\n  public setConfigRequestState(): void {\r\n    this.configRequested = true;\r\n  }\r\n\t// Irrelevant for customer scenario, only used to load the navigator node once, if settings are defined\r\n  public getConfigRequestState(): boolean {\r\n    return this.configRequested;\r\n  }\r\n\t// For checking, if config is defined in microservice\r\n  async getConfig(): Promise<IFetchResponse> {\r\n    const url = `${this.path}/config`;\r\n    return await this.http.Get(url);\r\n  }\r\n\t// For saving the configuration, may not be needed if hard coded\r\n  async save(connection: any): Promise<IFetchResponse> {\r\n    const url = `${this.path}/config`;\r\n    return await this.http.Post(url, connection);\r\n  }\r\n\t// For deleting the configuration, may not be needed if hard coded\r\n  async delete(): Promise<IFetchResponse> {\r\n    const url = `${this.path}/config`;\r\n    const params = { timeout: 5000 };\r\n    return await this.http.Delete(url, params);\r\n  }\r\n\t// May not be needed in customer scenario\r\n  async listWorkspaces(): Promise<IFetchResponse> {\r\n    const url = `${this.path}/groups`;\r\n    return await this.http.Get(url);\r\n  }\r\n\t// May not be needed in customer scenario\r\n  async listReports(workspaceId: string): Promise<IFetchResponse> {\r\n    const url = `${this.path}/reports`;\r\n\r\n    const params = {\r\n      groupId: workspaceId\r\n    };\r\n\r\n    return await this.http.Get(url, params);\r\n  }\r\n\t\r\n\t// This is where the embeddingToken is requested\r\n  async embedReport(workspaceId: string, reportId: string): Promise<IFetchResponse> {\r\n    const url = `${this.path}/embedReport`;\r\n\r\n    const params = {\r\n      groupId: workspaceId,\r\n      reportId: reportId\r\n    };\r\n\r\n    return await this.http.Get(url, params);\r\n  }\r\n\r\n  flushCache() {\r\n    this.cachedInfo = JSON.parse(JSON.stringify(PowerBIService.cachedInfoDefault));\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { AlertService, gettext } from '@c8y/ngx-components';\n// import { TranslateService } from '@ngx-translate/core';\n// import { PowerBIService } from '@services/remote/powerbi.service';\nimport * as pbiClient from 'powerbi-client';\n// import { EmbeddingInfo, PowerBIWorkspace } from '@model/interfaces/powerbi.interface';\n// import { AppUtils } from \"@util/app-utils\";\nimport { EmbeddingInfo, PowerBIWorkspace } from './powerbi.interface';\nimport { PowerBIService } from './powerbi.service';\n@Component({\n  selector: 'lib-gp-powerbi-widget',\n  templateUrl: './gp-powerbi-widget.component.html',\n  styles: [\n  ]\n})\nexport class GpPowerbiWidgetComponent implements OnInit {\n  private powerbi = new pbiClient.service.Service(\n    pbiClient.factories.hpmFactory,\n    pbiClient.factories.wpmpFactory,\n    pbiClient.factories.routerFactory\n  );\n  @ViewChild('reportContainer', { static: true }) reportContainer: ElementRef;\n\n  @Input() embeddingInfo: EmbeddingInfo;\n  @Input() reportName: string;\n\n  public workspaces: PowerBIWorkspace[] = [];\n  public settingsNotDefined = false;\n  public isLoading = false;\n\n  // public AppUtils = AppUtils;\n\n  private readonly embedUrl = 'https://app.powerbi.com/reportEmbed';\n\n  constructor(\n    private powerbiService: PowerBIService,\n    private alertService: AlertService,\n    // private translateService: TranslateService\n  ) {}\n\t\n\t// When changes are pushed from host component to report component, component is reinitialized to show a different report. \n\t// This may not be needed in customer scenario\n  async ngOnChanges(changes: SimpleChanges): Promise<void> {\n    if (changes.embeddingInfo && changes.embeddingInfo.currentValue) {\n      await this.ngOnInit();\n    }\n  }\n\n  async ngOnInit(): Promise<void> {\n    try {\n      this.embedReport();\n    } catch (e) {\n      this.alertService.danger('Failed to fetch embedding token.');\n      // this.alertService.danger(this.translateService.instant(gettext('Failed to fetch embedding token.')));\n    }\n  }\n\t// This is where the Power BI client is actually used - parametrize the config however you like\n  private embedReport(reportId?: any, token?: string, filterPanelEnabled?: boolean, navPanelEnabled?: boolean) {\n    // const config = {\n    //   type: 'report',\n    //   id: reportId,\n    //   embedUrl: this.embedUrl,\n    //   tokenType: pbiClient.models.TokenType.Embed,\n    //   accessToken: token,\n    //   //permissions: pbi.models.Permissions.Read,\n    //   settings: {\n\t\t// \t\t// The option is called filterPaneEnabled, there is a typo in the method parameter name\n    //     filterPaneEnabled: filterPanelEnabled,\n\t\t// \t\t// Same as filterPaneEnabled\n    //     navContentPaneEnabled: navPanelEnabled,\n    //     background: pbiClient.models.BackgroundType.Transparent\n    //   }\n    // };\n    const config = {\n      type: 'report',\n      id: '1f7c1d48-10cd-4af6-89fc-6891347bb42f',\n      embedUrl: 'https://app.powerbi.com/reportEmbed?reportId=1f7c1d48-10cd-4af6-89fc-6891347bb42f&groupId=8341efa8-fe16-4402-a9f7-9f60edb11aff&w=2&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly9XQUJJLVdFU1QtRVVST1BFLUItUFJJTUFSWS1yZWRpcmVjdC5hbmFseXNpcy53aW5kb3dzLm5ldCIsImVtYmVkRmVhdHVyZXMiOnsibW9kZXJuRW1iZWQiOnRydWUsImFuZ3VsYXJPbmx5UmVwb3J0RW1iZWQiOnRydWUsImNlcnRpZmllZFRlbGVtZXRyeUVtYmVkIjp0cnVlLCJ1c2FnZU1ldHJpY3NWTmV4dCI6dHJ1ZSwic2tpcFpvbmVQYXRjaCI6dHJ1ZX19',\n      tokenType: pbiClient.models.TokenType.Embed,\n      accessToken: 'H4sIAAAAAAAEAB2Uxw6rWBZF_-VNKcmYTEk1AF9yzmFGuCaDSSa0-t_bXfM9ONprnf2fP3Z29VNW_vn7D1_jDRxWlvOajIq3fbX0FbkFWPNVW23noNHXcuC0C5tAue4OiFUz0MHouOudDSp5VVWS2QWPok6y5Fmveu2eR49SxmXbkgmk0WSKRPjAw0_eL-c7GfDmFRTcJDdQSOdWvAPSqUcENSy5HpULfjWzPkZoG7OTKdeDvP26eTfq23HLyrRe3_5d9BZmt9jytax0G09bOil33PJEc8axXyDpF-73eR6AeazMcLRhOPJ0NiKWoi5m7aWI2JfH6gSx9Jhd7cp7gzHUNn8Qkx-ICA-GiG3tD6D7yTT2SHSHMPcbdOnKr3hJwH2-FSZXkK9YrlWzBjRXbOT41t4FofL1aqQgfR5oR-mGBFSgNiG1vM-Y94W1rR7Z7c1e4oQWKks98GKkH50xj71z_SiH5tPfcnqjIFLcgLCZNzHpesV6gVmnIP9AupWsgAht5iTTmYvxEKRlelo9b68K7xK5-3r5Mv8g6hT_IGq1PLTJSrOOyy2_Z8kifc4ulwH-GXdUyULhaTC8_yKrDHAYT4nWjmFma3SYnmsZLdZNTr4HKu0RnQ2ExY2JBDSPmgFBMRRsWiQwXFJHudyyw0SUxhh523-AJhtrWjp9WeQOCYkQpkXbIdVJZnMHakpHV5SNFVXHppoUwEhGy2FeSkR0Aoz80ihDA3YN2CGmyGOPu0tZTpOz65Kg8tvqU5XRsShoyTft-iMIYTRmoiiXaTQn1TVEJv7NamCktEunqYuSNcofbYIvdaFgzWBe6z9__vrzWq7PNmnw-qmvUHc06v1KwfWrB4zCf60i1X2_VSC1J83ax1tRy2qjVcSrmLJLfMnz-bvHqxA8QpeQjnxD-xzjRKWYSxRP-Wi63MaOPBLLTlNopgy8xOf4mbBp5_V8RCjNdk2L7lD6IozY_J7hdVx-awIsUK0owFj-CI03pw6Ru9_lw3t9h6ifOqTiHjirXazTQORz2Y7n2gxktUh210GQvBmGnzaAET1yEoxJVK5J82HKcHKqUYp8_OQob7rGj4k9Z36rdF29bnR7J3tI7ivN8BRGSoxvLV3hpR4tsHzRR8ItYc-47m8tAUlHc9Ao8OVLpQGlKvOnUYz1B1Q2F2oR3K6tQhbHsMWrbfX459-ar08NFyX8tdxx4me0H_LFK4aMWFbw-caf6t-U11Rjtu0L_MWmGOtv-9RU3HaL0cKTtujrmo3fmhUqd6UoFembjtFRggaDgaEv8dA0ZTs8GtAEG-8moWFPy944sCshkREohv3WZiveCgAJXeiX7s5sPJ-LRiFzpoe7nX6J7HnyCuNQLSB-C0VNSVNDbnd8GrvLCeSYu9KhtWyIMhu-GxdL8jRucy6rtYfjS13vRWeCjQioZRS349YiUYiIgVUrt_7Z6jpH6qGsZNGBqTUEELy-FvhIyrr-7PMz1bgtgI8pcyuweIvx_CmDMLQVSEu8P22qsqele_kWSPJcaHVJGZr0yDHcfw0zQzcUdpwCDpiy9a4NHcPqyBiDiGz0DZJbvFADSYr6_zD--z-RGtQG7gUAAA==.eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly9XQUJJLVdFU1QtRVVST1BFLUItUFJJTUFSWS1yZWRpcmVjdC5hbmFseXNpcy53aW5kb3dzLm5ldCIsImVtYmVkRmVhdHVyZXMiOnsibW9kZXJuRW1iZWQiOmZhbHNlfX0=',\n      //permissions: pbi.models.Permissions.Read,\n      settings: {\n\t\t\t\t// The option is called filterPaneEnabled, there is a typo in the method parameter name\n        filterPaneEnabled: true,\n\t\t\t\t// Same as filterPaneEnabled\n        navContentPaneEnabled: true,\n        background: pbiClient.models.BackgroundType.Transparent\n      }\n    };\n    const reportContainer = this.reportContainer.nativeElement;\n    this.powerbi.reset(reportContainer);\n    const report = this.powerbi.embed(reportContainer, config);\n\n    report.off('error');\n    report.on('error', (error) => {\n      this.alertService.danger('Failed to embed report.'\n        // this.translateService.instant(gettext('Failed to embed report.'))\n      );\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { gettext } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\n// import { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { PowerBIReportModalResult, PowerBIReports, PowerBIWorkspace } from '../powerbi.interface';\nimport { PowerBIService } from '../powerbi.service';\n\n\n@Component({\n  selector: 'lib-gp-powerbi-config',\n  templateUrl: './gp-powerbi-config.component.html',\n  styleUrls: ['./gp-powerbi-config.component.css']\n})\nexport class GpPowerbiConfigComponent implements OnInit {\n  public workspaceIndex = 0;\n  public workspaces: PowerBIWorkspace[];\n  public reports: PowerBIReports[];\n  public visibleReports: PowerBIReports;\n\n  public form: FormGroup;\n  public isLoading = false;\n  public onClose: Subject<PowerBIReportModalResult> = new Subject<PowerBIReportModalResult>();\n  public modalResult: PowerBIReportModalResult = {\n    workspaceId: null,\n    report: null\n  };\n  public error = '';\n  constructor(\n    private powerbiService: PowerBIService,\n    // public bsModalRef: BsModalRef,\n    private fb: FormBuilder,\n    private translateService: TranslateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    \n    const configFetchResponse = await this.powerbiService.getConfig();\n    console.log('fetchReponse',configFetchResponse);\n\n    const workspacesFetchResult = await this.powerbiService.listWorkspaces();\n    console.log('listWorkspaces',workspacesFetchResult);\n    this.form = this.fb.group({\n      workspace: this.fb.control(this.workspaces[0], Validators.required),\n      report: this.fb.control(this.reports[0].length > 0 ? this.reports[0][0] : null, Validators.required)\n    });\n    this.visibleReports = this.reports[0];\n    const workspaces = this.workspaces.slice(1, this.workspaces.length);\n\n    workspaces.forEach(() => {\n      this.reports.push(null);\n    });\n\n    this.form.controls.workspace.valueChanges.subscribe(async (workspaceValue: PowerBIWorkspace) => {\n      const workspaceIndex = this.workspaces.findIndex((workspace) => workspace === workspaceValue);\n\n      if (workspaceIndex >= 0) {\n        if (this.reports[workspaceIndex] === null) {\n          try {\n            this.error = '';\n            this.isLoading = true;\n\n            const reportsFetchResult = await this.powerbiService.listReports(this.workspaces[workspaceIndex].id);\n            if (reportsFetchResult.status === 200) {\n              const payload = await reportsFetchResult.json();\n              if (payload.status === 'SUCCEEDED') {\n                this.reports[workspaceIndex] = payload.data;\n\n                if (this.reports[workspaceIndex].length > 0) {\n                  this.form.controls.report.setValue(this.reports[workspaceIndex][0]);\n                } else {\n                  this.form.controls.report.setValue(null);\n                }\n                this.form.updateValueAndValidity();\n              } else {\n                throw Error();\n              }\n            } else {\n              this.form.controls.report.setValue(null);\n              throw Error();\n            }\n          } catch (e) {\n            this.error = this.translateService.instant(gettext('Fetching reports for workspace failed.'));\n          } finally {\n            this.isLoading = false;\n          }\n        } else {\n          this.error = '';\n          this.form.controls.report.setValue(this.reports[workspaceIndex][0].id);\n        }\n        this.visibleReports = this.reports[workspaceIndex];\n        this.workspaceIndex = workspaceIndex;\n      }\n    });\n  }\n\n  close(): void {\n    // this.bsModalRef.hide();\n  }\n\n  save(): void {\n    this.modalResult.workspaceId = this.form.controls.workspace.value.id;\n\n    this.modalResult.report = this.form.controls.report.value;\n\n    this.modalResult.report.workspaceId = this.modalResult.workspaceId;\n\n    this.onClose.next(this.modalResult);\n    // this.bsModalRef.hide();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HOOK_COMPONENTS, CoreModule, FormsModule as c8yFormsModule, ModalModule  } from '@c8y/ngx-components';\nimport { GpPowerbiWidgetComponent } from './gp-powerbi-widget.component';\nimport { HttpService } from './http.service';\nimport { PowerBIService } from './powerbi.service';\nimport { GpPowerbiConfigComponent } from './gp-powerbi-config/gp-powerbi-config.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\n\n\n@NgModule({\n  declarations: [GpPowerbiWidgetComponent,GpPowerbiConfigComponent],\n  imports: [\n  CoreModule, CollapseModule,  RouterModule, c8yFormsModule, ReactiveFormsModule,\n  ModalModule\n  ],\n  providers: [\n    HttpService,\n    PowerBIService,\n    // BSModalService,\n    {\n      provide: HOOK_COMPONENTS,\n      multi: true,\n      useValue: {\n        id: 'powerbi.widget',\n        label: 'Power BI Widget',\n        description: 'Power BI Widget',\n        component: GpPowerbiWidgetComponent,\n        configComponent: GpPowerbiConfigComponent,\n        data: {\n          ng1: {\n            options: {\n              noDeviceTarget: true,\n              noNewWidgets: false,\n              deviceTargetNotRequired: true,\n              groupsSelectable: true\n            },\n          }\n        }\n      }\n    }],\n  exports: [GpPowerbiWidgetComponent],\n  entryComponents: [GpPowerbiWidgetComponent]\n})\nexport class GpPowerbiWidgetModule { }\n","/*\n * Public API Surface of gp-powerbi-widget\n */\n\n// export * from './lib/gp-powerbi-widget.service';\n// export * from './lib/gp-powerbi-widget.component';\nexport * from './lib/gp-powerbi-widget.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {GpPowerbiConfigComponent as ɵd} from './lib/gp-powerbi-config/gp-powerbi-config.component';\nexport {GpPowerbiWidgetComponent as ɵa} from './lib/gp-powerbi-widget.component';\nexport {HttpService as ɵc} from './lib/http.service';\nexport {PowerBIService as ɵb} from './lib/powerbi.service';"],"sourceRoot":""}